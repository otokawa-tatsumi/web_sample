version: '3'

services:
  db:
    image: postgres:latest
    container_name: web_sample_db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - volume_postgres:/var/lib/postgresql/data
      - ./db/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - sample-server

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: web_sample_pgadmin
    ports:
      - "8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db
    volumes:
      - volume_pgadmin:/var/lib/pgadmin
      - ./db/servers.json:/pgadmin4/servers.json
      - ./db/pgpass:/pgadmin4/pgpass
    # servers.jsonのPassFile設定用
    # https://github.com/pgadmin-org/pgadmin4/issues/6257
    entrypoint: >
      /bin/sh -c "
      mkdir -m 700 -p /var/lib/pgadmin/storage/admin_pgadmin.org;
      cp /pgadmin4/pgpass /var/lib/pgadmin/storage/admin_pgadmin.org/;
      chmod 600 /var/lib/pgadmin/storage/admin_pgadmin.org/pgpass;
      /entrypoint.sh
      "
    networks:
      - sample-server

  # バックエンドをperlにしたい場合はコメントを外す
  # api-app:
  #   build:
  #     context: ./perl-app
  #     dockerfile: Dockerfile
  #   container_name: web_sample_api
  #   volumes:
  #     - "./perl-app/src:/app"
  #   networks:
  #     - sample-server

  # バックエンドをnode.jsにしたい場合はコメントを外す
  # api-app:
  #   build:
  #     context: ./node-app
  #     dockerfile: Dockerfile
  #   container_name: web_sample_api
  #   volumes:
  #     - "./node-app/src:/app"
  #   networks:
  #     - sample-server

  # バックエンドをpythonにしたい場合はコメントを外す
  # api-app:
  #   build:
  #     context: ./python-app
  #     dockerfile: Dockerfile
  #   container_name: web_sample_api
  #   volumes:
  #     - "./python-app:/app"
  #   networks:
  #     - sample-server

  # バックエンドをphpにしたい場合はコメントを外す
  # api-app:
  #   build:
  #     context: ./php-app
  #     dockerfile: Dockerfile
  #   container_name: web_sample_api
  #   volumes:
  #     - "./php-app:/app"
  #   networks:
  #     - sample-server

  view-app:
    build:
      context: ./view-app
      dockerfile: Dockerfile
    container_name: web_sample_view
    volumes:
      - "./view-app/src:/usr/share/nginx/view"
    networks:
      - sample-server

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: web_sample_nginx
    ports:
      - "8080:80"
    depends_on:
      - view-app
      - api-app
    networks:
      - sample-server

networks:
  sample-server:
    driver: bridge

volumes:
  volume_postgres:
    name: vpg
  volume_pgadmin:
    name: vpga